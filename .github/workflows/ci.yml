name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        julia-version: ['1.8.4'] #['1.5', '1.7', '1']
        r-version: ['4.2.1']

    steps:
    - uses: actions/checkout@v2

    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
    - uses: julia-actions/setup-julia@v1
      with:
        version: ${{ matrix.julia-version }}
    - name: Use libcurl.so from Julia
      run: |
        sudo apt-get update -y && sudo apt-get install -y libcurl4-openssl-dev libmpfr-dev
    # https://github.com/szcf-weiya/Cell-Video/commit/8b81175b4d503057f59f809d05fb3707cc9f3d28#comments
    - name: Install Dependencies for R
      run: |
        r = getOption("repos")
        r["CRAN"] = "https://cloud.r-project.org/"
        options(repos=r)
        options(download.file.method = "wget")
        install.packages("remotes")
        install.packages("RCurl", INSTALL_opts = "--no-test-load") # required by fda
        install.packages("fda")
        install.packages("lsei")
        install.packages("Iso")
        install.packages("cobs")
        install.packages("splines")
        install.packages("monmlp")
      shell: Rscript {0}
      env:
        MAKEFLAGS: LDFLAGS=-Wl,-rpath,/opt/hostedtoolcache/julia/${{ matrix.julia-version }}/x64/bin/../lib/julia/\ -L/opt/hostedtoolcache/julia/${{ matrix.julia-version }}/x64/bin/../lib/julia/
        LD_PRELOAD: /opt/hostedtoolcache/julia/${{ matrix.julia-version }}/x64/bin/../lib/julia/libcurl.so.4
        # CURL_CONFIG: 'bash /tmp/mycurl-config'

    - uses: webfactory/ssh-agent@v0.7.0 # install private repo
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Clone private repo
      run: git clone git@github.com:szcf-weiya/MonotoneSplines.jl.git /tmp/MonotoneSplines.jl
    - name: Install Dependence for Julia
      run: |
        using Pkg
        Pkg.activate(".")
        Pkg.add(url="/tmp/MonotoneSplines.jl")
        Pkg.instantiate()
      shell: julia {0}

    - uses: julia-actions/julia-runtest@v1
      with:
        prefix: xvfb-run
      env:
        LD_LIBRARY_PATH: /opt/R/${{ matrix.r-version }}/lib/R/lib
    - uses: julia-actions/julia-processcoverage@v1
    - uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.info
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: lcov.info

  docs:
    name: Documentation
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        julia-version: ['1.8.4'] #['1.5', '1.7', '1']
        r-version: ['4.2.1']

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
      - name: Use libcurl.so from Julia
        run: |
          sudo apt-get update -y && sudo apt-get install -y libcurl4-openssl-dev libmpfr-dev
  
      # https://github.com/szcf-weiya/Cell-Video/commit/8b81175b4d503057f59f809d05fb3707cc9f3d28#comments
      - name: Install Dependencies for R
        run: |
          r = getOption("repos")
          r["CRAN"] = "https://cloud.r-project.org/"
          options(repos=r)
          options(download.file.method = "wget")
          install.packages("remotes")
          install.packages("RCurl", INSTALL_opts = "--no-test-load") # required by fda
          install.packages("fda")
          install.packages("lsei")
          install.packages("Iso")
          install.packages("cobs")
          install.packages("splines")
          install.packages("monmlp")
        shell: Rscript {0}
        env:
          MAKEFLAGS: LDFLAGS=-Wl,-rpath,/opt/hostedtoolcache/julia/${{ matrix.julia-version }}/x64/bin/../lib/julia/\ -L/opt/hostedtoolcache/julia/${{ matrix.julia-version }}/x64/bin/../lib/julia/
          LD_PRELOAD: /opt/hostedtoolcache/julia/${{ matrix.julia-version }}/x64/bin/../lib/julia/libcurl.so.4
          # CURL_CONFIG: 'bash /tmp/mycurl-config'

      - uses: webfactory/ssh-agent@v0.7.0 # install private repo
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Clone private repo
        run: git clone git@github.com:szcf-weiya/MonotoneSplines.jl.git /tmp/MonotoneSplines.jl
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.add(url="/tmp/MonotoneSplines.jl"); Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - uses: julia-actions/julia-docdeploy@v1
        env:
          LD_LIBRARY_PATH: /opt/R/${{ matrix.r-version }}/lib/R/lib
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          # DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
  